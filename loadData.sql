/*
CREATE TABLE PUBLIC_USERS AS (SELECT * FROM keykholt.PUBLIC_USER_INFORMATION);
CREATE TABLE PUBLIC_FRIENDS AS (SELECT * FROM keykholt.PUBLIC_ARE_FRIENDS);
CREATE TABLE PUBLIC_PHOTO_INFO AS (SELECT * FROM keykholt.PUBLIC_PHOTO_INFORMATION);
CREATE TABLE PUBLIC_TAG_INFO AS (SELECT * FROM keykholt.PUBLIC_TAG_INFORMATION);
CREATE TABLE PUBLIC_EVENT_INFO AS (SELECT * FROM keykholt.PUBLIC_EVENT_INFORMATION);
*/


/*----------- USER TABLE -----------*/
INSERT INTO USERS (USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER) 
	(SELECT DISTINCT (USER_ID), FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER 
	FROM keykholt.PUBLIC_USER_INFORMATION);

/*----------- FRIENDS TABLE --------------*/

INSERT INTO FRIENDS (USER1_ID, USER2_ID)
	(SELECT USER1_ID, USER2_ID FROM keykholt.PUBLIC_ARE_FRIENDS
		WHERE USER1_ID < USER2_ID
		UNION
		SELECT USER2_ID, USER1_ID FROM keykholt.PUBLIC_ARE_FRIENDS
		WHERE USER1_ID > USER2_ID);

/*----------- CITIES TABLE ------------*/
INSERT INTO CITIES (CITY_NAME, STATE_NAME, COUNTRY_NAME)
	(SELECT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY
		FROM keykholt.PUBLIC_USER_INFORMATION
	UNION 
	SELECT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY
		FROM keykholt.PUBLIC_USER_INFORMATION
	UNION
	SELECT EVENT_CITY, EVENT_STATE, EVENT_COUNTRY
		FROM keykholt.PUBLIC_EVENT_INFORMATION);

/*--------- USER CURRENT CITY --------*/
INSERT INTO USER_CURRENT_CITY (USER_ID, CURRENT_CITY_ID)
	(SELECT DISTINCT(PUB_USER_INFO.USER_ID), CITIES.CITY_ID
		FROM keykholt.PUBLIC_USER_INFORMATION PUB_USER_INFO
	FULL JOIN CITIES
		ON PUB_USER_INFO.CURRENT_CITY = CITIES.CITY_NAME 
		AND PUB_USER_INFO.CURRENT_STATE = CITIES.STATE_NAME
		AND PUB_USER_INFO.CURRENT_COUNTRY = CITIES.COUNTRY_NAME);


/*--------- USER HOMETOWN CITY ----------*/
INSERT INTO USER_HOMETOWN_CITY (USER_ID, HOMETOWN_CITY_ID)
	(SELECT DISTINCT(PUB_USER_INFO.USER_ID), CITIES.CITY_ID
		FROM keykholt.PUBLIC_USER_INFORMATION PUB_USER_INFO
	FULL JOIN CITIES
		ON PUB_USER_INFO.HOMETOWN_CITY = CITIES.CITY_NAME 
		AND PUB_USER_INFO.HOMETOWN_STATE = CITIES.STATE_NAME
		AND PUB_USER_INFO.HOMETOWN_COUNTRY = CITIES.COUNTRY_NAME);


/*--------- USER PROGRAMS --------*/
 INSERT INTO PROGRAMS (INSTITUTION, CONCENTRATION, DEGREE)
 	(SELECT INSTITUTION_NAME, PROGRAM_CONCENTRATION, PROGRAM_DEGREE
 		FROM keykholt.PUBLIC_USER_INFORMATION
 		WHERE INSTITUTION_NAME IS NOT NULL 
 		OR PROGRAM_CONCENTRATION IS NOT NULL 
 		OR PROGRAM_DEGREE IS NOT NULL);


/*--------- USER EDUCATION --------*/
INSERT INTO EDUCATION (USER_ID, PROGRAM_ID, PROGRAM_YEAR)
	(SELECT PUB_USER_INFO.USER_ID, PROGRAMS.PROGRAM_ID, PUB_USER_INFO.PROGRAM_YEAR 
		FROM keykholt.PUBLIC_USER_INFORMATION PUB_USER_INFO
		RIGHT JOIN PROGRAMS
		ON PUB_USER_INFO.INSTITUTION_NAME = PROGRAMS.INSTITUTION
		AND PUB_USER_INFO.PROGRAM_CONCENTRATION = PROGRAMS.CONCENTRATION
		AND PUB_USER_INFO.PROGRAM_DEGREE = PROGRAMS.DEGREE
		);

/*--------- USER EVENTS -----------*/
INSERT INTO USER_EVENTS (EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE, 
	EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, EVENT_SUBTYPE, EVENT_LOCATION,
	EVENT_CITY_ID, EVENT_START_TIME, EVENT_END_TIME)
	(SELECT PUB_EV_INFO.EVENT_ID, PUB_EV_INFO.EVENT_CREATOR_ID, PUB_EV_INFO.EVENT_NAME, PUB_EV_INFO.EVENT_TAGLINE, 
	PUB_EV_INFO.EVENT_DESCRIPTION, PUB_EV_INFO.EVENT_HOST, PUB_EV_INFO.EVENT_TYPE, PUB_EV_INFO.EVENT_SUBTYPE, 
	PUB_EV_INFO.EVENT_LOCATION, CITIES.CITY_ID, PUB_EV_INFO.EVENT_START_TIME, PUB_EV_INFO.EVENT_END_TIME
		FROM keykholt.PUBLIC_EVENT_INFORMATION PUB_EV_INFO
		RIGHT JOIN CITIES
		ON PUB_EV_INFO.EVENT_CITY = CITIES.CITY_NAME
		AND PUB_EV_INFO.EVENT_STATE = CITIES.STATE_NAME
		AND PUB_EV_INFO.EVENT_COUNTRY = CITIES.COUNTRY_NAME
		WHERE PUB_EV_INFO.EVENT_ID IS NOT NULL);

/*-------- ALBUMS -----------*/
INSERT INTO ALBUMS (ALBUM_ID, ALBUM_OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME, 
	ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, COVER_PHOTO_ID)
	(SELECT DISTINCT(PUB_PHOTO_INFO.ALBUM_ID), PUB_PHOTO_INFO.OWNER_ID, PUB_PHOTO_INFO.ALBUM_NAME,
	PUB_PHOTO_INFO.ALBUM_CREATED_TIME, PUB_PHOTO_INFO.ALBUM_MODIFIED_TIME, PUB_PHOTO_INFO.ALBUM_LINK,
	PUB_PHOTO_INFO.ALBUM_VISIBILITY, PUB_PHOTO_INFO.COVER_PHOTO_ID
		FROM keykholt.PUBLIC_PHOTO_INFORMATION PUB_PHOTO_INFO);

/*-------- PHOTOS -----------*/
INSERT INTO PHOTOS (PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATE_TIME, 
	PHOTO_MODIFIED_TIME, PHOTO_LINK)
	(SELECT DISTINCT(PUB_PHOTO_INFO.PHOTO_ID), PUB_PHOTO_INFO.ALBUM_ID, PUB_PHOTO_INFO.PHOTO_CAPTION, 
	PUB_PHOTO_INFO.PHOTO_CREATED_TIME, PUB_PHOTO_INFO.PHOTO_MODIFIED_TIME, PUB_PHOTO_INFO.PHOTO_LINK
		FROM keykholt.PUBLIC_PHOTO_INFORMATION PUB_PHOTO_INFO
		WHERE PUB_PHOTO_INFO.ALBUM_ID IS NOT NULL 
		OR PUB_PHOTO_INFO.PHOTO_CREATED_TIME IS NOT NULL 
		OR PUB_PHOTO_INFO.PHOTO_MODIFIED_TIME IS NOT NULL);

/*-------- TAGS ------------*/
INSERT INTO TAGS (TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATE_TIME, TAG_X, TAG_Y)
	(SELECT DISTINCT(PUB_TAG_INFO.PHOTO_ID), PUB_TAG_INFO.TAG_SUBJECT_ID, PUB_TAG_INFO.TAG_CREATED_TIME,
	PUB_TAG_INFO.TAG_X_COORDINATE, PUB_TAG_INFO.TAG_Y_COORDINATE
		FROM keykholt.PUBLIC_TAG_INFORMATION PUB_TAG_INFO);


